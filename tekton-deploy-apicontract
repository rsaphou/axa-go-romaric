apiVersion: tekton.dev/v1
kind: Task
metadata:
  name: check-anypoint-image
spec:
  steps:
  - name: check-anypoint-image
    image: ago-fr-apim-docker.docker.artifactory.europe.com/openpaas-gw/apimbox:1.1.0

    script: |
        #!/bin/bash
        echo "Run as ; $(whoami)"
        su genesis
        id
        cd .
        echo "Anypoint version"
        anypoint-cli-v4 --version
        echo "Git version"
        git --version 
        echo "Rust version"
        rustc --version
        echo "Python version"
        python3 --version
        python -c "print('Hello')"
        echo "Curl version"
        curl --version
---
apiVersion: tekton.dev/v1
kind: Task
metadata:
  name: get-token
spec:
  results:
    - name: access-token
      description: "Anypoint Access Token"
  steps:
  - name: get-token
    image: ago-fr-apim-docker.docker.artifactory.europe.com/openpaas-gw/apimbox:1.1.0
          
    script: |
        #!/bin/sh
        echo "Anypoint version"
        anypoint-cli-v4 --version
        echo "Git version"
        git --version 
        echo "Rust version"
        rustc --version
        echo "Python version"
        python3 --version
        python -c "print('Hello')"
        echo "Curl version"
        curl --version
        cat <<EOF>> /tmp/script.py
        import requests
        body_token = {"client_id": "client_id","client_secret": "client_secret","grant_type": "client_credentials"}
        headers_token = {"Content-Type": "application/x-www-form-urlencoded"}
        resp1 = requests.post("https://anypoint.mulesoft.com/accounts/api/v2/oauth2/token", data=body_token, headers=headers_token)
        data1 = resp1.json()
        token = data1.get("access_token")
        print("Anypoint Token:", token)
        with open("/tekton/results/access-token", "w") as f:
            f.write(token)
        EOF
        python /tmp/script.py

---
apiVersion: tekton.dev/v1
kind: Task
metadata:
  name: get-gateway
spec:
  params:
    - name: access-token
      description: "Token for API auth"
  steps:
    - name: get-gateway
      image: ago-fr-apim-docker.docker.artifactory.cloud.com/openpaas-gw/apimbox:1.1.0
      script: |
        #!/bin/sh
        cat <<EOF>> /tmp/script.py
        import requests
        import os
        token = os.environ["TOKEN"]
        headers = {"Authorization": f"Bearer {token}"}
        response = requests.get("https://anypoint.mulesoft.com/gatewaymanager/api/v1/organizations/bg_id/environments/env_id/gateways", headers=headers)
        print("API response:", response.json())
        EOF
        python /tmp/script.py
      env:
        - name: TOKEN
          value: $(params.access-token)

---
apiVersion: tekton.dev/v1
kind: Task
metadata:
  name: publish-api-contract
spec:
  params:
    - name: access-token
      description: "Publish an API Contract"
  steps:
    - name: publish-api-contract
      image: ago-fr-apim-docker.docker.artifactory.europe.axa-cloud.com/openpaas-gw/apimbox:1.1.0
      script: |
        #!/bin/sh
        echo "Git Clone"
        git clone https://romaric-saphountsientsi-external:personnal-token@github.axa.com/apim/axago.apim.gtw.api-contract.git
        echo "Git Clone done"
        ls
        cd axago.apim.gtw.api-contract
        echo "Contenu du repository :"
        ls 
        echo "Deploiement du Contract d'API"
        cat <<EOF>> /tmp/script.py
        import requests
        import os
        token = os.environ["TOKEN"]
        files={"files.oas.yaml": ("files.oas.yaml", open("weather-ci-api.yaml", "rb"), "application/octet-stream") }
        data={"type": "rest-api", 
            "status": "published",
            "properties.apiVersion": "v1", 
            "properties.mainFile": "weather-ci-api.yaml",
            "name": "weather-api-demo-tekton"
           }
        headers = {"Authorization": f"Bearer {token}"}
        response = requests.post("https://anypoint.mulesoft.com/exchange/api/v2/organizations/bg_id/assets/bg_id/weather-api-demo-tekton/1.2.0", data=data, files=files, headers=headers)
        print("API response:", response.json())
        EOF
        python /tmp/script.py
      env:
        - name: TOKEN
          value: $(params.access-token)

---
apiVersion: tekton.dev/v1
kind: Pipeline
metadata:
  name: apim-apiinstance-deploy-pipeline
spec:
  tasks:
    - name: check-anypoint-image-task
      taskRef:
        name: check-anypoint-image

    - name: get-token-task
      taskRef:
        name: get-token

    - name: get-gateway-task
      runAfter: [get-token-task]
      taskRef:
        name: get-gateway
      params:
        - name: access-token
          value: $(tasks.get-token-task.results.access-token)

    - name: publish-api-contract-task
      runAfter: [get-token-task]
      taskRef:
        name: publish-api-contract
      params:
        - name: access-token
          value: $(tasks.get-token-task.results.access-token)
          
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  name: axago-apim-apiinstance-deploy
spec:
  pipelineRef:
    name: apim-apiinstance-deploy-pipeline
  taskRunTemplate:
    serviceAccountName: rsa-ci-sa

