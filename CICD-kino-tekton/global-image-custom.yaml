apiVersion: tekton.dev/v1
kind: Task
metadata:
  name: install-tools
spec:
  steps:
  - name: use-anypoint-cli
    image: image-registry.openshift-image-registry.svc:5000/pipeline-axa-pdk/node-anypoint-cli
    script: |
      #!/bin/sh
      anypoint-cli-v4 plugins:install anypoint-cli-pdk-plugin
      anypoint-cli-v4 --version
      
      export HOME=/tekton/home  
      echo "Rust installation step"

      echo "ðŸ”§ Using custom CA cert"
      export SSL_CERT_FILE=/etc/ssl/custom-ca/ca.crt

      if ! command -v rustc &> /dev/null
      then
        echo "Rust could not be found, installing it..."
        # Install Rust non-interactively
        curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | bash -s -- -y
        # Source the Rust environment (non-interactive)
        source $HOME/.cargo/env
      fi
      echo "âœ… Rust: $(rustc --version)"
      rustup default 1.83.0
      echo "Rust version 1.8.3 set"
      rustup target add wasm32-wasi
      echo "Rust WASI set"
      cargo install --locked cargo-generate@0.22.0

      echo "Cargo installed"
      export ANYPOINT_HOST=eu1.anypoint.mulesoft.com
      anypoint-cli-v4 conf client_id bb7bbc355f4041cbb7416ffe0fc8e39a
      anypoint-cli-v4 conf client_secret 32D680f253334186a2181A831d21C7A8
      anypoint-cli-v4 conf organization 847916b2-61a8-475f-919b-35cfcddb88e4
      anypoint-cli-v4 account:environment:list
    volumeMounts:
      - name: custom-ca
        mountPath: /etc/ssl/custom-ca
        readOnly: true
    env:
      - name: SSL_CERT_FILE
        value: /etc/ssl/custom-ca/ca.crt
  volumes:
    - name: custom-ca
      configMap:
        name: rust-certificate
---
apiVersion: tekton.dev/v1
kind: Pipeline
metadata:
  name: tools-install-pipeline
spec:
  tasks:
    - name: install-all
      taskRef:
        name: install-tools
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  name: tools-install-run
spec:
  pipelineRef:
    name: tools-install-pipeline
  taskRunTemplate:
    serviceAccountName: sa-docker
